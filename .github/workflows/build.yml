name: Test Teensy and rp2040 Builds

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-teensies:
    runs-on: ubuntu-latest
    
    # strategy:
    #   matrix:
    #     fqbn:
    #       - one
    #       - two
    #       - three

    steps:
      - uses: actions/checkout@v4

      - name: uncomment include
        run: sed -i '/Phob1_2/s://::' PhobGCC-SW/PhobGCC/common/phobGCC.h
        
      - uses: arduino/compile-sketches@v1.1.0
        with:
          # fqbn: #{{ matrix.fqbn }}
          fqbn: "teensy:avr:teensy40"
          platforms: |
            - name: "teensy:avr"
              source-url: "https://www.pjrc.com/teensy/package_teensy_index.json"
          libraries: |
            - name: curveFitting
            - name: Bolder Flight Systems Eigen
            - name: Bounce2
            - name: teensytimertool
              version: 1.0.0
          sketch-paths: |
            - PhobGCC
          
  build-rp2040:
    runs-on: ubuntu-latest
    
    steps:
    - name: apt update
      run: sudo apt update
      
    # Get/cache requisite APT packages
    - uses: awalsh128/cache-apt-pkgs-action@v1.3.0
      with:
        packages: cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential

    # Checkout this repo to the workspace
    - uses: actions/checkout@v4
      with:
        path: PhobGCC-SW

    # Uncomment phob 2.0 include
    - name: uncomment include
      run: sed -i '/Phob2_0/s://::' PhobGCC-SW/PhobGCC/common/phobGCC.h

    # Cache action for the pico-sdk directory
    # If the cache doesn't already exist it will be created at the end of the workflow
    - name: cache pico sdk
      id: cache-pico-sdk
      uses: actions/cache@v3
      with:
        path: pico-sdk
        key: rp2040-pico-sdk

    # Clone pico-sdk repo (if pico-sdk not found in cache)
    - name: clone pico-sdk
      if: steps.cache-pico-sdk.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
      with:
        repository: raspberrypi/pico-sdk
        path: pico-sdk

    # Init the submodules for pico-sdk (if pico-sdk not found in cache)
    - name: init pico-sdk submodules
      if: steps.cache-pico-sdk.outputs.cache-hit != 'true'
      run: cd $GITHUB_WORKSPACE/pico-sdk && git submodule update --init

    # Set PICO_SDK_PATH for make steps
    - name: set env var
      run: echo "PICO_SDK_PATH=$GITHUB_WORKSPACE/pico-sdk" >> "$GITHUB_ENV"

    - name: cmake
      run: cd PhobGCC-SW/PhobGCC/rp2040 && mkdir build && cd build && cmake ..
      
    - name: make
      run: cd PhobGCC-SW/PhobGCC/rp2040/build && make

    - name: log
      run: ls -l PhobGCC-SW/PhobGCC/rp2040/build
